{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","InitialLogo","useState","boxes","setboxes","initial","setinitial","useEffect","getBoxArray","number","arr","i","push","class","className","length","map","ele","index","includes","onClick","filter","toggleValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAmEeA,MA/Df,WACE,IAAMC,EAAc,CAClB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,KAE3B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAASD,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRC,EAAY,OACX,IAEH,IAAMA,EAAc,SAACC,GAEnB,IADA,IAAIC,EAAM,EAAC,GACFC,EAAI,EAAGA,EAAIF,EAAQE,IAC1BD,EAAIE,MAAK,GAGX,OADAR,EAASM,GACFA,GAkBT,OACE,qCACE,sBAAKG,MAAM,YAAX,UACE,qBAAKA,MAAM,WACX,qBAAKA,MAAM,aAEb,sBAAKC,UAAU,YAAf,UACoB,IAAjBX,EAAMY,OACLZ,EAAMa,KAAI,SAACC,EAAKC,GAAN,OACR,qBAEEJ,UACEG,IAAQZ,EAAQc,SAASD,GAAS,UAAY,cAEhDE,QAAS,kBA7BD,SAACF,GACnB,GAAGb,EAAQc,SAASD,GAClBZ,EAAWD,EAAQgB,QAAO,SAAAJ,GAAG,OAAIA,IAAMC,UADzC,CAIA,IAAMR,EAAG,YAAOP,GAChBO,EAAIQ,IAAUR,EAAIQ,GAClBd,EAASM,IAsBgBY,CAAYJ,KAJtBA,MAQT,gDAEF,wBAAQJ,UAAU,uBAAuBM,QAzB5B,WACjBZ,EAAY,KACZF,EAAWL,IAuBP,0BCjDOsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8be41de8.chunk.js","sourcesContent":["import \"./App.css\";\nimport \"./App.scss\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const InitialLogo = [\n    208, 209, 229, 230, 231, 232, 250, 251, 252, 253, 254, 255, 271, 272, 274,\n    275, 277, 278, 293, 294, 295, 296, 297, 298, 299, 300, 317, 320, 338, 340,\n    341, 343, 366, 364, 361, 359,\n  ];\n  const [boxes, setboxes] = useState([]);\n  const [initial, setinitial] = useState(InitialLogo);\n\n  useEffect(() => {\n    getBoxArray(571);\n  }, []);\n\n  const getBoxArray = (number) => {\n    let arr = [true];\n    for (let i = 0; i < number; i++) {\n      arr.push(true);\n    }\n    setboxes(arr);\n    return arr;\n  };\n\n  const toggleValue = (index) => {\n    if(initial.includes(index)){\n      setinitial(initial.filter(ele => ele!==index));\n      return;\n    }\n    const arr = [...boxes];\n    arr[index] = !arr[index];\n    setboxes(arr);\n  };\n\n  const resetBoard = () => {\n    getBoxArray(571);\n    setinitial(InitialLogo);\n  };\n\n  return (\n    <>\n      <div class=\"fireworks\">\n        <div class=\"before\"></div>\n        <div class=\"after\"></div>\n      </div>\n      <div className=\"container\">\n        {boxes.length !== 0 ? (\n          boxes.map((ele, index) => (\n            <div\n              key={index}\n              className={\n                ele && !initial.includes(index) ? \"box red\" : \"boxforwhite\"\n              }\n              onClick={() => toggleValue(index)}\n            ></div>\n          ))\n        ) : (\n          <div>Game Starting</div>\n        )}\n        <button className=\"reset disable-select\" onClick={resetBoard}>Reset</button>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}